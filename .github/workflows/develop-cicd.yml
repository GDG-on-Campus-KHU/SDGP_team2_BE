name: Java Build and Deploy on develop

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4
      # JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      # application.yaml 생성
      - name: Create application.yaml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YAML }}" > src/main/resources/application.yaml
      # Gradle 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
          chmod +x ./gradlew

      # 깃허브 label 설정
#      - name: Sync labels
#        uses: EndBug/label-sync@v2
#        with:
#          config-file: .github/labels.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      # DockerHub 로그인 (Push 시 반드시 필요)
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # docker-compose.yaml, .env 파일 자동 업로드
      - name: Upload docker-compose.yaml and .env to GCP
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          source: "docker-compose.yaml,.env"
          target: "~"

      # Buildx 생성 및 build & push
      - name: Build and Push Multi-Platform Image
        run: |
          docker buildx create --use --name builder || true
          docker buildx inspect builder --bootstrap
          docker buildx build --platform linux/amd64 \
            -t jh011007/coffee-app:develop \
            --push .

      # 7. GCP 인스턴스에 배포
      - name: Deploy to GCP Instance via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            echo "${{ secrets.ENV_FILE }}" > .env
            docker pull jh011007/coffee-app:develop
            docker compose down
            docker compose up -d
